syntax = "proto3";
package types;

import "role.proto";
import "util.proto";
import "group_user.proto";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "github.com/keybittech/awayto-v3/go/pkg/types";

service GroupService {
  rpc PostGroup(PostGroupRequest) returns (PostGroupResponse) {
    option (google.api.http) = {
      post: "/v1/group"
      body: "*"
    };
    option (use_tx) = true;
  }

  rpc PatchGroup(PatchGroupRequest) returns (PatchGroupResponse) {
    option (google.api.http) = {
      patch: "/v1/group"
      body: "*"
    };
    option (site_role) = APP_GROUP_ADMIN;
    option (throttle) = 1;
  }

  rpc PatchGroupAssignments(PatchGroupAssignmentsRequest) returns (PatchGroupAssignmentsResponse) {
    option (google.api.http) = {
      patch: "/v1/group/assignments"
      body: "*"
    };
    option (site_role) = APP_GROUP_PERMISSIONS;
    option (throttle) = 60;
  }

  rpc GetGroupAssignments(GetGroupAssignmentsRequest) returns (GetGroupAssignmentsResponse) {
    option (google.api.http) = {
      get: "/v1/group/assignments"
    };
    option (site_role) = APP_GROUP_PERMISSIONS;
  }

  rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupResponse) {
    option (google.api.http) = {
      delete: "/v1/group"
    };
    option (site_role) = APP_GROUP_ADMIN;
  }
}

message IGroup {
  string id = 1;
  string externalId = 2;
  string createdSub = 3;
  string createdOn = 4;
  string defaultRoleId = 5;
  string allowedDomains = 6;
  string displayName = 7;
  string name = 8;
  string purpose = 9;
  bool ldr = 10;
  string code = 11;
  int32 usersCount = 12;
  map<string, IRole> roles = 13;
  map<string, IGroupUser> users = 14;
  map<string, IGroupRoleAuthActions> availableGroupAssignments = 15;
  bool isValid = 16;
  bool needCheckName = 17;
  bool checkingName = 18;
  string checkedName = 19;
  string error = 20;
  bool active = 21;
  bool ai = 22;
}

message IGroupRoleAuthAction {
  string id = 1;
  string name = 2;
}

message IGroupRoleAuthActions {
  string id = 1;
  repeated IGroupRoleAuthAction actions = 2;
}

message IGroupRoleActionState {
  map<string, IGroupRoleAuthActions> assignments = 1;
}

message IAssignmentAction {
  string name = 1;
}

message IAssignmentActions {
  repeated IAssignmentAction actions = 1;
}

message IAssignments {
  map<string, IAssignmentActions> assignments = 1;
}

message PostGroupRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  string displayName = 2 [(google.api.field_behavior) = REQUIRED];
  string purpose = 3 [(google.api.field_behavior) = REQUIRED];
  string allowedDomains = 4 [(google.api.field_behavior) = REQUIRED];
  bool ai = 5 [(google.api.field_behavior) = REQUIRED];
}

message PostGroupResponse {
  string code = 1 [(google.api.field_behavior) = REQUIRED];
}

message PatchGroupRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  string displayName = 2 [(google.api.field_behavior) = REQUIRED];
  string purpose = 3 [(google.api.field_behavior) = REQUIRED];
  string allowedDomains = 4 [(google.api.field_behavior) = REQUIRED];
  bool ai = 5 [(google.api.field_behavior) = REQUIRED];
}

message PatchGroupResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

message PatchGroupAssignmentsRequest {
  map<string, IAssignmentActions> assignments = 1 [(google.api.field_behavior) = REQUIRED];
  string id = 2;
}

message PatchGroupAssignmentsResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetGroupAssignmentsRequest {}

message GetGroupAssignmentsResponse {
  map<string, IGroupRoleAuthActions> assignments = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteGroupRequest {
  string ids = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteGroupResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

