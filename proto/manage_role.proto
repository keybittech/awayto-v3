syntax = "proto3";
package types;

import "role.proto";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "github.com/keybittech/awayto-v3/go/pkg/types";

service ManageRolesService {
  rpc PostManageRoles(PostManageRolesRequest) returns (PostManageRolesResponse) {
    option (google.api.http) = {
      post: "/v1/manage/roles"
      body: "*"
    };
  }

  rpc PatchManageRoles(PatchManageRolesRequest) returns (PatchManageRolesResponse) {
    option (google.api.http) = {
      patch: "/v1/manage/roles"
      body: "*"
    };
  }

  rpc GetManageRoles(GetManageRolesRequest) returns (GetManageRolesResponse) {
    option (google.api.http) = {
      get: "/v1/manage/roles"
    };
  }

  rpc DeleteManageRoles(DeleteManageRolesRequest) returns (DeleteManageRolesResponse) {
    option (google.api.http) = {
      delete: "/v1/manage/roles"
    };
  }
}

message PostManageRolesRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message PostManageRolesResponse {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  string name = 2 [(google.api.field_behavior) = REQUIRED];
}

message PatchManageRolesRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  string name = 2 [(google.api.field_behavior) = REQUIRED];
}

message PatchManageRolesResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetManageRolesRequest {}

message GetManageRolesResponse {
  repeated IRole roles = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteManageRolesRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteManageRolesResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}
