syntax = "proto3";
package types;

import "util.proto";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "pkg/types";

service ContactService {
  rpc PostContact(PostContactRequest) returns (PostContactResponse) {
    option (google.api.http) = {
      post: "/v1/contacts"
      body: "*"
    };
  }

  rpc PatchContact(PatchContactRequest) returns (PatchContactResponse) {
    option (google.api.http) = {
      patch: "/v1/contacts"
      body: "*"
    };
  }

  rpc GetContacts(GetContactsRequest) returns (GetContactsResponse) {
    option (google.api.http) = {
      get: "/v1/contacts"
    };
  }

  rpc GetContactById(GetContactByIdRequest) returns (GetContactByIdResponse) {
    option (google.api.http) = {
      get: "/v1/contacts/{id}"
    };
  }

  rpc DeleteContact(DeleteContactRequest) returns (DeleteContactResponse) {
    option (google.api.http) = {
      delete: "/v1/contacts/{id}"
    };
  }

  rpc DisableContact(DisableContactRequest) returns (DisableContactResponse) {
    option (google.api.http) = {
      patch: "/v1/contacts/{id}/disable"
    };
  }
}

message Contact {
  string id = 1;
  string name = 2;
  string email = 3;
  string phone = 4;
}

message PostContactRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED, (types.nolog) = true];
  string email = 2 [(google.api.field_behavior) = REQUIRED, (types.nolog) = true];
  string phone = 3 [(google.api.field_behavior) = REQUIRED, (types.nolog) = true];
}

message PostContactResponse {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message PatchContactRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
  string name = 2 [(types.nolog) = true];
  string email = 3 [(types.nolog) = true];
  string phone = 4 [(types.nolog) = true];
}

message PatchContactResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetContactsRequest {}

message GetContactsResponse {
  repeated Contact contacts = 1 [(google.api.field_behavior) = REQUIRED, (types.nolog) = true];
}

message GetContactByIdRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetContactByIdResponse {
  Contact contact = 1 [(google.api.field_behavior) = REQUIRED, (types.nolog) = true];
}

message DeleteContactRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteContactResponse {
  bool success = 1;
}

message DisableContactRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message DisableContactResponse {
  bool success = 1;
}
