syntax = "proto3";
package types;

import "form.proto";
import "util.proto";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "github.com/keybittech/awayto-v3/go/pkg/types";

service GroupFormService {
  rpc PostGroupForm(PostGroupFormRequest) returns (PostGroupFormResponse) {
    option (google.api.http) = {
      post: "/v1/group/forms"
      body: "*"
    };
    option (use_tx) = true;
  };
  rpc PostGroupFormVersion(PostGroupFormVersionRequest) returns (PostGroupFormVersionResponse) {
    option (google.api.http) = {
      post: "/v1/group/forms/version"
      body: "*"
    };
    option (invalidates) = "GetGroupForms";
    option (invalidates) = "GetGroupFormById";
  };
  rpc PatchGroupForm(PatchGroupFormRequest) returns (PatchGroupFormResponse) {
    option (google.api.http) = {
      patch: "/v1/group/forms"
      body: "*"
    };
    option (invalidates) = "GetGroupFormById";
  };
  rpc GetGroupForms(GetGroupFormsRequest) returns (GetGroupFormsResponse) {
    option (google.api.http) = {
      get: "/v1/group/forms"
    };
  };
  rpc GetGroupFormById(GetGroupFormByIdRequest) returns (GetGroupFormByIdResponse) {
    option (google.api.http) = {
      get: "/v1/group/forms/{formId}"
    };
  };
  rpc DeleteGroupForm(DeleteGroupFormRequest) returns (DeleteGroupFormResponse) {
    option (google.api.http) = {
      delete: "/v1/group/forms/{ids}"
    };
  };
}

message IGroupForm {
  string id = 1;
  string name = 2;
  string groupId = 3;
  string formId = 4;
  IProtoForm form = 5;
}

message PostGroupFormRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  IGroupForm groupForm = 2 [(google.api.field_behavior) = REQUIRED];
}

message PostGroupFormResponse {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message PostGroupFormVersionRequest {
  string name = 1 [(google.api.field_behavior) = REQUIRED];
  string formId = 2 [(google.api.field_behavior) = REQUIRED];
  IProtoFormVersion groupFormVersion = 3 [(google.api.field_behavior) = REQUIRED];
}

message PostGroupFormVersionResponse {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message PatchGroupFormRequest {
  IGroupForm groupForm = 1 [(google.api.field_behavior) = REQUIRED];
}

message PatchGroupFormResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetGroupFormsRequest {}

message GetGroupFormsResponse {
  repeated IGroupForm groupForms = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetGroupFormByIdRequest {
  string formId = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetGroupFormByIdResponse {
  IGroupForm groupForm = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteGroupFormRequest {
  string ids = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteGroupFormResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

