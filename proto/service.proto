syntax = "proto3";
package types;

import "service_tier.proto";

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "github.com/keybittech/awayto-v3/go/pkg/types";

service ServiceService {
  rpc PostService(PostServiceRequest) returns (PostServiceResponse) {
    option (google.api.http) = {
      post: "/v1/services"
      body: "*"
    };
  }

  rpc PatchService(PatchServiceRequest) returns (PatchServiceResponse) {
    option (google.api.http) = {
      patch: "/v1/services"
      body: "*"
    };
  }

  rpc GetServices(GetServicesRequest) returns (GetServicesResponse) {
    option (google.api.http) = {
      get: "/v1/services"
    };
  }

  rpc GetServiceById(GetServiceByIdRequest) returns (GetServiceByIdResponse) {
    option (google.api.http) = {
      get: "/v1/services/{id}"
    };
  }

  rpc DeleteService(DeleteServiceRequest) returns (DeleteServiceResponse) {
    option (google.api.http) = {
      delete: "/v1/services/{id}"
    };
  }

  rpc DisableService(DisableServiceRequest) returns (DisableServiceResponse) {
    option (google.api.http) = {
      patch: "/v1/services/{ids}/disable"
    };
  }
}

message IService {
  string id = 1;
  string name = 2 [(buf.validate.field).string.min_len = 1];
  optional int32 cost = 3 [
    (buf.validate.field).int32.gt = 0,
    (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  ];
  map<string, IServiceTier> tiers = 4 [
    (buf.validate.field).map.min_pairs = 1,
    (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  ];
  optional string formId = 5 [
    (buf.validate.field).string.uuid = true,
    (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  ];
  optional string surveyId = 6 [
    (buf.validate.field).string.uuid = true,
    (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  ];
  string createdOn = 7;
  int32 row = 8;
}

message PostServiceRequest {
  IService service = 1 [(google.api.field_behavior) = REQUIRED];
}

message PostServiceResponse {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message PatchServiceRequest {
  IService service = 1 [(google.api.field_behavior) = REQUIRED];
}

message PatchServiceResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetServicesRequest {}

message GetServicesResponse {
  repeated IService services = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetServiceByIdRequest {
  string id = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetServiceByIdResponse {
  IService service = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteServiceRequest {
  string ids = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteServiceResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

message DisableServiceRequest {
  string ids = 1 [(google.api.field_behavior) = REQUIRED];
}

message DisableServiceResponse {
  bool success = 1 [(google.api.field_behavior) = REQUIRED];
}

