[
  {
    "id": "9bca59665d0042f1958791dacd1d7552",
    "realm": "$KC_REALM",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": true,
    "registrationEmailAsUsername": true,
    "rememberMe": true,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "6f391f4907c64f6d94fa5a33f2683f7f",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "9bca59665d0042f1958791dacd1d7552",
          "attributes": {}
        },
        {
          "id": "22cc4409e9ed4100b2d9c2455a3c9293",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "9bca59665d0042f1958791dacd1d7552",
          "attributes": {}
        },
        {
          "id": "193da08399ff46cd9ee6c8a11467f1ae",
          "name": "default-roles-$KC_REALM",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "manage-account",
                "view-profile"
              ]
            }
          },
          "clientRole": false,
          "containerId": "9bca59665d0042f1958791dacd1d7552",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "41cf5ecd45204d88affce623d9b7faba",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "aa52ec535bb842fab2215fa1d556c12e",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "9b417708bd474246bd9f5c2202fec8ac",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "c0e8dad23ede4521b22229cc76b73c75",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "946f4a5070cc4d0ca5ef70cd40923a69",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "854aa0201cb64d76b73a4c3cd61577ef",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "473c8f9dfe284989becb5ddbe1a93d5a",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "4cfcd41dc6fc45f1b37c31ca62a262d4",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-realms",
                  "view-clients",
                  "manage-clients",
                  "manage-authorization",
                  "manage-identity-providers",
                  "query-clients",
                  "impersonation",
                  "create-client",
                  "view-realm",
                  "view-users",
                  "manage-realm",
                  "manage-events",
                  "view-events",
                  "view-identity-providers",
                  "view-authorization",
                  "query-groups",
                  "query-users",
                  "manage-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "bb76399da9d14ba7b3fe7a6c21fd0b05",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "6588796945244fb1ad2f39a97d0b2a4b",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "e65807b919d44e3ba3d7ffe7c8b7165b",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "da2ddfdf5d354c1a8b257a7aa5fb3b06",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "c46cd59d778a4523901e68746d431216",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "e27fccbecb494d9d8da16b64fee07595",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "b2ac980f81aa454686bf73da88961d46",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "f6c6b58d5f1c420a9b270810cf2bc64d",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "621d115182254bcda9eb1617d981cb16",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "ae306cdbe8294442a406a90896540e43",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          },
          {
            "id": "1664f5a2264f4c8c8c21dc0ac69c3ece",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "f7067dbb5c3e4adf99c39d48b2a95aee",
            "attributes": {}
          }
        ],
        "api-client": [],
        "security-admin-console": [],
        "admin-cli": [],
        "account-console": [],
        "broker": [
          {
            "id": "ecdcc0cef5cf4cffb8aa45127b9a6874",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "6448a1b3bbaf4c34b12c3531711475a6",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "41956ed8daa44a5a89ea06d5a6c28109",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "9812b486d40b4aef9fd0bdbefa685ed9",
            "attributes": {}
          },
          {
            "id": "0b8ffdd08fb64917ab83b448f3643bf3",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "9812b486d40b4aef9fd0bdbefa685ed9",
            "attributes": {}
          },
          {
            "id": "99ead497f0b2498ba57cea8323d87edc",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "9812b486d40b4aef9fd0bdbefa685ed9",
            "attributes": {}
          },
          {
            "id": "3496c5aaec0845bc96de9f9a90f7f942",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "9812b486d40b4aef9fd0bdbefa685ed9",
            "attributes": {}
          },
          {
            "id": "c6e863ba66e64ac98a757668d33d9919",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "9812b486d40b4aef9fd0bdbefa685ed9",
            "attributes": {}
          },
          {
            "id": "b967dcaff8c645ffa8302206dec9a386",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "9812b486d40b4aef9fd0bdbefa685ed9",
            "attributes": {}
          },
          {
            "id": "1eddc16f5d2e420b9039a42f2e74e7b6",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "9812b486d40b4aef9fd0bdbefa685ed9",
            "attributes": {}
          },
          {
            "id": "77f419abcabb4627a31271ac2ba1aef1",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "9812b486d40b4aef9fd0bdbefa685ed9",
            "attributes": {}
          }
        ],
        "devel-client": [
          {
            "id": "7cc2c48e7e284921be053804cb1e2dff",
            "name": "APP_GROUP_SCHEDULES",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          },
          {
            "id": "01dfffcc42e940ee8f4420297ab53edb",
            "name": "APP_GROUP_BOOKINGS",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          },
          {
            "id": "d423479001b34e94b8b7e992eba702c4",
            "name": "APP_GROUP_PERMISSIONS",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          },
          {
            "id": "757cb5e21b4041e4940062ec97788ae7",
            "name": "APP_GROUP_SCHEDULE_KEYS",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          },
          {
            "id": "18588907ff82492e8d21d3b0c79aacc9",
            "name": "APP_ROLE_CALL",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          },
          {
            "id": "604ee836016449b6bd27f2075bd02cfc",
            "name": "APP_GROUP_ADMIN",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          },
          {
            "id": "98a10dedfa024fd6a687efdfe5818445",
            "name": "APP_GROUP_SERVICES",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          },
          {
            "id": "f41eacb834134d9e8c1bf279f0cc5749",
            "name": "APP_GROUP_ROLES",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          },
          {
            "id": "c2f11255142943a1b459900a1b76a685",
            "name": "APP_GROUP_USERS",
            "composite": false,
            "clientRole": true,
            "containerId": "f12a55b66be449ccba1689228a666d08",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRole": {
      "id": "193da08399ff46cd9ee6c8a11467f1ae",
      "name": "default-roles-$KC_REALM",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "9bca59665d0042f1958791dacd1d7552"
    },
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
    ],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256",
      "RS256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
      {
        "id": "290b3511f748465fa12296757fce52c7",
        "username": "service-account-api-client",
        "emailVerified": false,
        "createdTimestamp": 1739129102766,
        "enabled": true,
        "totp": false,
        "serviceAccountClientId": "api-client",
        "credentials": [],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "default-roles-$KC_REALM"
        ],
        "clientRoles": {
          "realm-management": [
            "manage-clients",
            "manage-users",
            "manage-realm"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "9812b486d40b4aef9fd0bdbefa685ed9",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/$KC_REALM/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/$KC_REALM/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "fe61b875f1b14bf4ab3409baf82c96bc",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/$KC_REALM/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/$KC_REALM/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "0a0f7c44653c41bc8f99238de046d2b3",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "4cdca6c5f19942bd94ad4a4024401d23",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "43e3cf9d4a3f4b928f03e300d552e8e1",
        "clientId": "api-client",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "$KC_API_CLIENT_SECRET",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.secret.creation.time": "1739129102"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "service_account",
          "acr",
          "roles",
          "profile",
          "groups",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "6448a1b3bbaf4c34b12c3531711475a6",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f12a55b66be449ccba1689228a666d08",
        "clientId": "devel-client",
        "rootUrl": "https://localhost:7443",
        "baseUrl": "https://localhost:7443",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "https://localhost:7443/*"
        ],
        "webOrigins": [
          "https://localhost:7443"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "access.token.lifespan": "60",
          "post.logout.redirect.uris": "https://localhost:7443"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "groups",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f7067dbb5c3e4adf99c39d48b2a95aee",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "true"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      },
      {
        "id": "c9a8441475fd4c3293789ed6053ea0b4",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/$KC_REALM/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/$KC_REALM/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "realm_client": "false",
          "client.use.lightweight.access.token.enabled": "true",
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "d931b4a8d34c4e4eb652da092a3fbb27",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "basic",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "organization",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "746fe1a06b1546c5a075e1e0eefa50e6",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "${rolesScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "6aedac084f324ffe9899d3a92b05a4ff",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "64f04ac0fb284acc826ded3a21e19469",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "77dafdfe1b684efe82fa364797e3687d",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "a12251a5a736402786f6b7fabb047d60",
        "name": "groups",
        "description": "",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "13ef0f0e00474022ac6571b11f6ad836",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-group-membership-mapper",
            "consentRequired": false,
            "config": {
              "full.path": "true",
              "id.token.claim": "false",
              "access.token.claim": "true",
              "claim.name": "groups",
              "userinfo.token.claim": "false"
            }
          }
        ]
      },
      {
        "id": "1c4333e2052f4cafb3b8fef766a78c46",
        "name": "service_account",
        "description": "Specific scope for a client enabled for service accounts",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "85e5ddab27794e62a80163b1ff820d42",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "841ffe86e1c64a48ac7e8c8e4782a58d",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          },
          {
            "id": "80117a7464a848878a424bc964fad486",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "c03ae62d7f8f463b91175098338618b4",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${profileScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "3e9f9fa5ee6542cdb838cd44304563fd",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "28bf3e76198b4eb8875ff81d3a0c09e0",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "d44fba03aae94c63859a6d67f3d7ae8f",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c678e009afa74d7b92357c9cd418fd33",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "560cb3c92a7b4a0e831f64dfeaf94cde",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "60331e936bf04190bd93787a7f9b39c9",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "2623afa63eb7409cb284f7e5bb3638ae",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "1ec3f63716464c3497a25084df77e7a8",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "2bf2edcc32da4c4a9ac2a7ed3f0b63be",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c1cdea20f337466bb47f8ccb8095fb89",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "5a7cb802d2594edcb551232d189fff5b",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ce73de6a8fa643929dd4dcf03ea24082",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "8153df446d8a4a599fad01900d01f509",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0d02c2cfd48b4022abb83612ae5f2f48",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "21f28db0c41942b59d86f95c24f348a4",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "2bc1ca96f3ad4f7abbd01e75aa3c2508",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${addressScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "affdef1ee8b04f0490fe28f43fd858fc",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "introspection.token.claim": "true",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "ac48bef7b7dc4e38b67315142b6cf8d4",
        "name": "organization",
        "description": "Additional claims about the organization a subject belongs to",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${organizationScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "b981fe319c4242ad88d2b0ac02665663",
            "name": "organization",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-organization-membership-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "organization",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "bf633d8991d34ce3b470a08bcfd0307c",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "a8ff977d10704252927a79b9d9ea946a",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "36b88b3e90544943ac61d23b10b1c879",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "multivalued": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "556f95e36fb241db8703425948640f18",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${emailScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "7024437e243948f182fce92ef206dd49",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          },
          {
            "id": "946c318b351d4cb8820c0289e80e6c05",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "9eea6375e6f44eb9b5f19f9433db9857",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "a374f01d030a41cb84c36c164d9a789b",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "90057c7fc21f429dbcbab86bd04d374a",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "consent.screen.text": "${phoneScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "1653f2bfe5fe40778aa024a4e8a5f517",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0404eb8fd80145be8cd4203c12a2338a",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "35804afb0ac24d27bb84166c056d7266",
        "name": "saml_organization",
        "description": "Organization Membership",
        "protocol": "saml",
        "attributes": {
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "ea61ab21546441f6908be87c22953a31",
            "name": "organization",
            "protocol": "saml",
            "protocolMapper": "saml-organization-membership-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "b3ff98e279964b1c969c8c9f9da36ed2",
        "name": "basic",
        "description": "OpenID Connect scope for add all basic claims to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "448d860228d24f9f9eee15c9ccd7ddc6",
            "name": "sub",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-sub-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          },
          {
            "id": "2c6daab85bfd4301ba81a29e12b74a66",
            "name": "auth_time",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "AUTH_TIME",
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "auth_time",
              "jsonType.label": "long"
            }
          }
        ]
      },
      {
        "id": "723d381a77a943288100eab9ed13fea4",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "consent.screen.text": "",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "f601d347e65b4b54b9b85d54b0bc7cd1",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "d4837cb5ab274fca932ebb78ecd3dbe7",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "747db2020cc94d88a5f252ffce1c6c57",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "introspection.token.claim": "true",
              "access.token.claim": "true"
            }
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "role_list",
      "saml_organization",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "basic",
      "groups"
    ],
    "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt",
      "organization"
    ],
    "browserSecurityHeaders": {},
    "smtpServer": {},
    "loginTheme": "site",
    "adminTheme": "kcv2",
    "emailTheme": "site",
    "eventsEnabled": false,
    "eventsListeners": [
      "custom-event-listener"
    ],
    "enabledEventTypes": [
      "UPDATE_CONSENT_ERROR",
      "SEND_RESET_PASSWORD",
      "GRANT_CONSENT",
      "VERIFY_PROFILE_ERROR",
      "UPDATE_TOTP",
      "REMOVE_TOTP",
      "REVOKE_GRANT",
      "LOGIN_ERROR",
      "CLIENT_LOGIN",
      "RESET_PASSWORD_ERROR",
      "UPDATE_CREDENTIAL",
      "IMPERSONATE_ERROR",
      "CODE_TO_TOKEN_ERROR",
      "CUSTOM_REQUIRED_ACTION",
      "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
      "RESTART_AUTHENTICATION",
      "UPDATE_PROFILE_ERROR",
      "IMPERSONATE",
      "LOGIN",
      "UPDATE_PASSWORD_ERROR",
      "OAUTH2_DEVICE_VERIFY_USER_CODE",
      "CLIENT_INITIATED_ACCOUNT_LINKING",
      "USER_DISABLED_BY_PERMANENT_LOCKOUT",
      "OAUTH2_EXTENSION_GRANT",
      "REMOVE_CREDENTIAL_ERROR",
      "TOKEN_EXCHANGE",
      "REGISTER",
      "LOGOUT",
      "AUTHREQID_TO_TOKEN",
      "DELETE_ACCOUNT_ERROR",
      "CLIENT_REGISTER",
      "IDENTITY_PROVIDER_LINK_ACCOUNT",
      "USER_DISABLED_BY_TEMPORARY_LOCKOUT",
      "UPDATE_PASSWORD",
      "DELETE_ACCOUNT",
      "FEDERATED_IDENTITY_LINK_ERROR",
      "CLIENT_DELETE",
      "IDENTITY_PROVIDER_FIRST_LOGIN",
      "VERIFY_EMAIL",
      "CLIENT_DELETE_ERROR",
      "CLIENT_LOGIN_ERROR",
      "RESTART_AUTHENTICATION_ERROR",
      "REMOVE_FEDERATED_IDENTITY_ERROR",
      "EXECUTE_ACTIONS",
      "TOKEN_EXCHANGE_ERROR",
      "PERMISSION_TOKEN",
      "FEDERATED_IDENTITY_OVERRIDE_LINK",
      "SEND_IDENTITY_PROVIDER_LINK_ERROR",
      "UPDATE_CREDENTIAL_ERROR",
      "EXECUTE_ACTION_TOKEN_ERROR",
      "SEND_VERIFY_EMAIL",
      "OAUTH2_EXTENSION_GRANT_ERROR",
      "OAUTH2_DEVICE_AUTH",
      "EXECUTE_ACTIONS_ERROR",
      "REMOVE_FEDERATED_IDENTITY",
      "OAUTH2_DEVICE_CODE_TO_TOKEN",
      "IDENTITY_PROVIDER_POST_LOGIN",
      "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
      "FEDERATED_IDENTITY_OVERRIDE_LINK_ERROR",
      "UPDATE_EMAIL",
      "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
      "REGISTER_ERROR",
      "REVOKE_GRANT_ERROR",
      "LOGOUT_ERROR",
      "UPDATE_EMAIL_ERROR",
      "EXECUTE_ACTION_TOKEN",
      "CLIENT_UPDATE_ERROR",
      "UPDATE_PROFILE",
      "AUTHREQID_TO_TOKEN_ERROR",
      "INVITE_ORG_ERROR",
      "FEDERATED_IDENTITY_LINK",
      "CLIENT_REGISTER_ERROR",
      "INVITE_ORG",
      "SEND_VERIFY_EMAIL_ERROR",
      "SEND_IDENTITY_PROVIDER_LINK",
      "RESET_PASSWORD",
      "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
      "OAUTH2_DEVICE_AUTH_ERROR",
      "REMOVE_CREDENTIAL",
      "UPDATE_CONSENT",
      "REMOVE_TOTP_ERROR",
      "VERIFY_EMAIL_ERROR",
      "SEND_RESET_PASSWORD_ERROR",
      "CLIENT_UPDATE",
      "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
      "CUSTOM_REQUIRED_ACTION_ERROR",
      "UPDATE_TOTP_ERROR",
      "CODE_TO_TOKEN",
      "VERIFY_PROFILE",
      "GRANT_CONSENT_ERROR",
      "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
    ],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "252a162267b144069ee9beb98656c5dd",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "46747e15944a4bb58c48477a5e5e6096",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "ff191d44690c4efdbf4bd2c889df90e0",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "b200dfb55e43499f85b6935d3d738f0c",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "a243c2ca44684dc79d0dfd725be76b1b",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-address-mapper"
            ]
          }
        },
        {
          "id": "c5f43f6cc0854d7cb98df5c953fa5279",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "4bccd1a727ec4a79bc4679a386f8331c",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "86e1443e4167434c9e67bf0ec435f484",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-address-mapper",
              "oidc-full-name-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-attribute-mapper"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "93d8c016e6894175806289622b0e8a5a",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEogIBAAKCAQEAmfT2XvKZiGD+S+3EyKMhlf12Fj74kJPUHCVof+GlGkGB0zgjyki2S86sUxXDztSZycJQN6V/61Q7VIOMCzPrQfi5wNOw9/7m7uFTL6XKJghhMN3GmQyld/6ljRpvwlAAOtvAm8Sfy/jTcZ55tg8W3kp3POI8O9omWWn7hPvRCSczl8Cpt0khfZeTSfG8VvneucRpT3/BgDF2jkOEObcw/TJtBzxMmuiIgbtxv7Uk8jAhLBMLsEqglt3h21Mh117+eXiB0am0G0DduAqcdifAGRsHB6i8LdPG8uE6uJd+idDYe2cuse0m0NrRk0QK2VQ09gCosi2mMbaedqo/5/TcsQIDAQABAoIBADhZuGmFS1vnAHzjINE9IFhpZrT6xHkKmqrYqFiSSx+ClZWtaTArkAnMMjfQ8hP8rfNym3Dasyj78iFbasFY9gV2F+szsIT8+CK8N3nrqUNlcslzizLOtavneUndwMUzCfqBH40EGWcLgr0F/89602h2ghE3T0uq67lzeLuyfc7myEe56WNMkRYfUn6Zb436Dk+HFygfwSYdivI7+6hSNaJJdkNpXpuEMgN+rm7e+E7uqPNcpfpizohNVv7kW2XJ9tHnhr25gwNo+0XMfA11jSmGPTuyMYx19ESuhr1ICTRZuDYC9FCWpOmMVvjbPLXFth/RGcQYJj7r+XJIjut9xtcCgYEA0bWle849LWD7RiVM2B9VAm/6O/O/U3kYjaN1WVtIJJikHyO2vzvWs+U7uZEuvOaV6EJGLyh3r6geBwP0umWD8CVi1K7sGLQYS/L/n+KeWQVJn0pER2E98ZPITDx+iH/9ZKLRSjVdPEVjvwdiXmeLyk2dclfcNqdYy/i/Zf251aMCgYEAu/DSNO+NSUC0el90QwfEZ49Uvk5oMbsleGsXcbEdl9dqKCnuJoeZesEmjGdZrrvdgFOEq79ZOaxf+O86ZJVBxmTLLsCmR8VaAaz4DkFllzgRN5DqrEF3q9xDcJz94AiRRf2H72NGV4ROhIzkpoQUzIF5ZiQVL/cdNsgGeAHnoZsCgYBxnUnkg13dofdAj6DMTl1ODsCxjmMPpEHLKs2+9ZdmTFROkpjFjnPJzt3GsYNy0DJTPOStU+1T+28ZOelyuuD6UCb1NzeuQpQPQb2AL9S+QgEbDa9kRKi8ouYXd4bOCRmNVjCxVawHpUhfDG8c2lh/6ADvG+6wpYWULFX1ubrepQKBgCdzdNyx0GmpEHmDogcUEVFfz/0mvk56J3JwoHo4IKsoB9uoeZpS6o/PDcV5SGUagHOYlIfs4dDuczLxHMPSZP09WT1WKVF1huBFK8jqR2YH2e1dGTXRhEpqMSnpeo1VnxEfGDLTFwf1+PlwDes6XJdVMmOTfXMVH2fJczorxDCzAoGAGMc+08IsdQ1N5XTg+nTtUGuf3FoB7z0TUGDvm0/p3z7kxWfVpu0I8YaDf9jBZHIBQgp56PjHdtTDbCkurT2dsngbXeVicZPeSsotm5unCwKkwogU35ZAWh7g+oyTZagwdAU3zYDYpKeuUO6xtL/IK2/TT1KvQ6c5A4csjkVM0vM="
            ],
            "keyUse": [
              "ENC"
            ],
            "certificate": [
              "MIICtzCCAZ8CBgGU7CukUjANBgkqhkiG9w0BAQsFADAfMR0wGwYDVQQDDBRhd2F5dG9leGNoYW5nZV9yZWFsbTAeFw0yNTAyMDkxOTIyNTBaFw0zNTAyMDkxOTI0MzBaMB8xHTAbBgNVBAMMFGF3YXl0b2V4Y2hhbmdlX3JlYWxtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmfT2XvKZiGD+S+3EyKMhlf12Fj74kJPUHCVof+GlGkGB0zgjyki2S86sUxXDztSZycJQN6V/61Q7VIOMCzPrQfi5wNOw9/7m7uFTL6XKJghhMN3GmQyld/6ljRpvwlAAOtvAm8Sfy/jTcZ55tg8W3kp3POI8O9omWWn7hPvRCSczl8Cpt0khfZeTSfG8VvneucRpT3/BgDF2jkOEObcw/TJtBzxMmuiIgbtxv7Uk8jAhLBMLsEqglt3h21Mh117+eXiB0am0G0DduAqcdifAGRsHB6i8LdPG8uE6uJd+idDYe2cuse0m0NrRk0QK2VQ09gCosi2mMbaedqo/5/TcsQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBoN2jKUN8X9e4yvsv98bj8LOdh6EYKgL7zqX9L3EHiCdzw5GrNUuXsNO0XDWyTHqfV9vFQQEfyhsJ+eS5wxxgClNTiaQvidFn855j1jMrtwGBM8QZdMJKXJgYPC0B5DydDyqcUeRaCAIudmNQvGeX/UnkOe1PzOAnVHZdYDuf+7XY214YqTMWzaXDxEUsoNk6ieMZmfkaai/BKLjtVeARD7wQF150y5kYYvvoNnsgRjjxWZr/PrX7Ft0918+iLEQbrnterYNXXyFt0mzGY4AuHy0nEvAWQLYHZtn6CPMgfwIz7mBJhDQ/NQqvSJ7d4WE/ArRNNBjoyz4OKNOFHe5J8"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "b34c6858545b43b1a6cfb4a952f2800e",
          "name": "hmac-generated-hs512",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "fbcc946b-485b-4b4d-bf16-812bf6824cd7"
            ],
            "secret": [
              "qOH_yh9qbfhPjwA3cEq7yvMcG8qkEe7rreKa33g1D0TmUbSZaMDIjqH8CPm36fn-0AZwr2BiEItp4AvIRbHbGKkiZZwGRkp_7l43UbYd_1kZTjwtvhKDX3ROcryFX0hoM4Ns-7F4CV2fbPp93sGhReguiDlLipOtZ_Au2fixhLo"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS512"
            ]
          }
        },
        {
          "id": "aae709e5815d483186cab05276119a81",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEowIBAAKCAQEAyrmlPwhCeyVbxCiSDLe6UuU4koYmV7LsJBBygj6ZuByahuMrC90pbpbQha0sbkYkUr3OpAD8JTw3Pa4de5a/JQUjeukuvFNPAfPV5rnMK6RQgMaf3skwvDvqxNyhqLtU/Cg+bpmS4QUD3hNNgHnR0+UmUdYesvuM5hucWNDN7ZUB/ZntIJe3apAwSrZyFE/+udcXGxxi/efi/1Zk1SmIGDTUtYUgkp4MhJc+Yg1H6/fc+5sn75dtjt1l62XHpSTbHhbCfwSgdXigHHx3tKwgiGqG/6LlNqMmMUqH9LVE+wC4Xjy9hQDnQicklZkCXtP42jM5/ZNwXNQrQ7E2iqQgVwIDAQABAoIBAFX7Lw7w3eGFEsq7ulYShsAp4DilFRYVGPqizy5WhrQDzbZwGw3JG42AAajwreuHbFh7kG0WzdqtE3DhrDeC1EdLSqUSyXOukc/uL0bQfrvz0QENPTksc7MiZoxgV2BNM9pO50vZbuZpTh6eaTyYblpE0l/bROH8tuHRzBoPVYfx7b2iMve9L1TZxBG5vDmku/8WJ/7gOCMpie6x4DHt1y0op8SbLgODVwfanQlLHlkcwMrWuF0xebFts8atV8GX8OzgitPh6T0f6KawW9hCAHZgcuULSx8KFwQQ6X8Kct+cblfMxcJ/YpF7AEC+L1fr2lE6jPkyb4ntiwwR30dwJgECgYEA6VA+GOaya9hCO6EutXdTeSu24TVrNUwaHcd1JieQBKZrgOikfBx7b8vMnhMw4jtgslHIZ8QfmrEIoFcN62FKz3RkHFu8AHmx2FzbjADru0GgXqJfll1xMDeWomMkbx/OPrE22nM6TUHRr878hTfAnuOnD7xrSqwrsRMNZ2hpyUECgYEA3m/77ewph/hXOxrLzH82A3myXNPSo13eAbUGy3tU1XWLr46Ece3jl7gTj5VoZFMZai3TKcpXYMid8WpV4q9aaL/mFIGMzh2ol5MwwcXSqVphTL+RewjkPygC1IMgA6ESAFw0XU+Lr1LXMKlNGSZiDrnmsnQmCmNujl0F/kbQq5cCgYBAOuD9hfU0j1Kci+EKABGw2AH+ufALuimubQypNlcFkLMjx+gQat7ohhiMpAffIC2cqbscJff1ZCtVyOGCHUS1G/u7et2k29vEDrw6LL64zHZT1yutf4f7mDIV/mk3VnA2/h51wScZwbbySW9nVVPn6hBB2sNGyWM12mLkRvBogQKBgQDGkELdfe8JENiVy3LYJ0sJSS6+jNzAtv+CmJ3rMTpmntrGKbvzk/+SJWFY0G/y9vd+AFA7QwRDQnMz2c+3Xv+e+IckEQ2nxXQFcwCYScanJSYsg+oTYbmW41m7aR4//x35slWQYnz4UkQEjW1koQ3xxWO6M9LtfRto/INoHMEUGwKBgGuhPAxZiZNNFCfKNmt1+gnIx9TyBMAYEAXNLTQ74TZ5Wc2XErhAVJlQ0v3CuSrtjgavzzGRDj0Slfbmmscbent3Sa1AfLoCdu7bNJODQ9iz3szOrIFg6XILIJBQbU5DlC32q9HvhQ8jtdru25si0HEv3RS9QYAKMLuT93pPFBEK"
            ],
            "keyUse": [
              "SIG"
            ],
            "certificate": [
              "MIICtzCCAZ8CBgGU7CuiozANBgkqhkiG9w0BAQsFADAfMR0wGwYDVQQDDBRhd2F5dG9leGNoYW5nZV9yZWFsbTAeFw0yNTAyMDkxOTIyNTBaFw0zNTAyMDkxOTI0MzBaMB8xHTAbBgNVBAMMFGF3YXl0b2V4Y2hhbmdlX3JlYWxtMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyrmlPwhCeyVbxCiSDLe6UuU4koYmV7LsJBBygj6ZuByahuMrC90pbpbQha0sbkYkUr3OpAD8JTw3Pa4de5a/JQUjeukuvFNPAfPV5rnMK6RQgMaf3skwvDvqxNyhqLtU/Cg+bpmS4QUD3hNNgHnR0+UmUdYesvuM5hucWNDN7ZUB/ZntIJe3apAwSrZyFE/+udcXGxxi/efi/1Zk1SmIGDTUtYUgkp4MhJc+Yg1H6/fc+5sn75dtjt1l62XHpSTbHhbCfwSgdXigHHx3tKwgiGqG/6LlNqMmMUqH9LVE+wC4Xjy9hQDnQicklZkCXtP42jM5/ZNwXNQrQ7E2iqQgVwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQB9AKgIHr1H+Ty7HTFuac5pCaNrkuVZ4wLn33byKYhI8Udis6wuwi2W4soYq665j+0njYN1SqU2CnSJAq66Wj+iU3xOSb5kg3k4yVpewElvXRf4FGmmIKzt3+N/ZVfRasXxgMEhzlMRM5gLDZslYwti4NeGNsnTzvHrxvx8rgfKuhUwD38hvItv0afX15hjpHI1D1F1qRVIPqNkkmoJV3w0tWNAhH/3ikhJHQdhTb3o/Ti/aqLxyhJrH5gZovGjfLCc+2bmXWKatP5lbpH2pAy/O3zghE++eGx6+EBlhov2xSBrWtwYfGxn5oVwmfEYRdt72Lf9NNIzppG0tA1CCn5s"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "8f715d84a4474a60a3226760638ea3f7",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "916c837e-b5a5-4d2d-9c08-640a6c63e0b6"
            ],
            "secret": [
              "8Y2MblXwEhxWeRyPLR3bDA"
            ],
            "priority": [
              "100"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "a2c111f5558542de840bd17b2bf14bf8",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "b5afaa529d894afdbdce5f78146f37b0",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2a1c448499a14a05bdfa193830652e3d",
        "alias": "Browser - Conditional Organization",
        "description": "Flow to determine if the organization identity-first login is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "organization",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "706bbdd8e79f401380628d20146e60d4",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "8d8670bf577a43de9126d2cc40815459",
        "alias": "First Broker Login - Conditional Organization",
        "description": "Flow to determine if the authenticator that adds organization members is to be used",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "idp-add-organization-member",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f05effaab98e498da48f764f83c265f7",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "80cd09eab7594ed9ae4f73e339a31b37",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2f3c910e609e41549b857ad856ab5ec6",
        "alias": "Organization",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "4e6bb61b5d034773bb98de4d4ebd8bda",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "405072094f014fa79dfe1fa76cf78c5a",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "4e2e59dff753401183f6fbd7dea63db9",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "49d3d806ef7945549d02a060f13195c0",
        "alias": "browser",
        "description": "Browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 26,
            "autheticatorFlow": true,
            "flowAlias": "Organization",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ccc37e8558a3467a9188ee152c1fd945",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "227467992a0b48448bd2cacf4d15ac3a",
        "alias": "custom registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "custom registration registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "ee8b58f1f8de40f0a58b2f69d59a26f0",
        "alias": "custom registration registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": false,
        "authenticationExecutions": [
          {
            "authenticator": "custom-registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 0,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 71,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "1c79e4d7ac494ba4a928eaa5642413bd",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "61e58fcaec8b419984fd96e665587017",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5b75ac32d390446e81840c6e9597c7b0",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 50,
            "autheticatorFlow": true,
            "flowAlias": "First Broker Login - Conditional Organization",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "9d5d6f2e723e47a9975dc62977ff6008",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "4e23de13b03b49a3a004e174ddc76499",
        "alias": "registration",
        "description": "Registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c2d27fd223d3445dac206621cfe15cc7",
        "alias": "registration form",
        "description": "Registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-terms-and-conditions",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 70,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "559cef5249574d22a82debf8454f6520",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "63b4359c8ccf4513ae9cb646357cc105",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "9a102093f54445bd94305d1642b06f1e",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "b317d0179b434696bec526dfbfb922be",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": true,
        "defaultAction": false,
        "priority": 70,
        "config": {}
      },
      {
        "alias": "webauthn-register-passwordless",
        "name": "Webauthn Register Passwordless",
        "providerId": "webauthn-register-passwordless",
        "enabled": true,
        "defaultAction": false,
        "priority": 80,
        "config": {}
      },
      {
        "alias": "VERIFY_PROFILE",
        "name": "Verify Profile",
        "providerId": "VERIFY_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 90,
        "config": {}
      },
      {
        "alias": "delete_credential",
        "name": "Delete Credential",
        "providerId": "delete_credential",
        "enabled": true,
        "defaultAction": false,
        "priority": 100,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "custom registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "oauth2DevicePollingInterval": "5",
      "userProfileEnabled": "true",
      "parRequestUriLifespan": "60",
      "cibaInterval": "5"
    },
    "keycloakVersion": "26.1.0",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "verifiableCredentialsEnabled": false,
    "adminPermissionsEnabled": false,
    "clientProfiles": {
      "profiles": []
    },
    "clientPolicies": {
      "policies": []
    }
  }
]
