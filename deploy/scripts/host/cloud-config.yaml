#cloud-config
bootcmd:
  - echo 'disable_root: true' >> /etc/cloud/cloud.cfg
groups:
  - project-prefixg: [dummyuserlogin, dummyuser]
users:
  - name: root
    lock_passwd: true
  - name: dummyuserlogin
    groups: users, 1000, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
  - name: dummyuser
    groups: users, 1000
    shell: /bin/bash
    lock_passwd: true
packages:
  - fail2ban
  - certbot
  - build-essential 
  - iptables-persistent
  - ufw
  - jq
  - openjdk-21-jre
  - maven
  - hugo
  - protobuf-compiler
  - protoc-gen-go
package_update: true
package_upgrade: true
runcmd:
  # assert group id to match pg docker user
  - groupmod -g 1000 project-prefixg
  # disable ssh
  - systemctl stop sshd
  - systemctl disable sshd
  # setup tailscale deps early to avoid timing issue
  - echo 'net.ipv4.ip_forward = 1' >> /etc/sysctl.d/99-tailscale.conf
  - echo 'net.ipv6.conf.all.forwarding = 1' >> /etc/sysctl.d/99-tailscale.conf
  - sysctl -p /etc/sysctl.d/99-tailscale.conf
  # init fail2ban
  - cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
  - systemctl enable fail2ban
  # configure firewall
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw default deny routed
  - ufw allow 41641/udp
  - ufw enable
  - ip6tables -A PREROUTING -t nat -p tcp --dport 80 -j REDIRECT --to-port http-port
  - ip6tables -A PREROUTING -t nat -p tcp --dport 443 -j REDIRECT --to-port https-port
  - iptables -A PREROUTING -t nat -p tcp --dport 80 -j REDIRECT --to-port http-port
  - iptables -A PREROUTING -t nat -p tcp --dport 443 -j REDIRECT --to-port https-port
  - bash -c "iptables-save > /etc/iptables/rules.v4"
  - bash -c "ip6tables-save > /etc/iptables/rules.v6"
  # create a log directory accessible by group, make sure future files are group visible
  - install -d -m 750 -o root -g 1000 log-dir log-dir/db
  - chmod g+s log-dir log-dir/db
  - setfacl -R -d -m g:1000:rwx log-dir
  # create a dir for the project owned by login user to do builds, accessible by service runner
  # setup build dependencies as build user
  - |
    su -l dummyuserlogin -c 'bash -s' << 'EOF'
    sudo git clone project-repo project-dir
    sudo chown -R dummyuserlogin:1000 project-dir
    sudo install -d -m 750 -o dummyuserlogin -g 1000 project-dir/backups project-dir/backups/db project-dir/working project-dir/local_tmp project-dir/demos project-dir/demos/final
    setfacl -R -d -m g:1000:rwx project-dir
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
    . ~/.nvm/nvm.sh && nvm install node-version && npm i -g pnpm@latest-10
    rm -rf /usr/local/go
    curl -L -o /tmp/goinstall.tar.gz https://go.dev/dl/go-version.tar.gz
    sudo tar -C /usr/local -xzf /tmp/goinstall.tar.gz && rm /tmp/goinstall.tar.gz
    echo "export PATH=\$PATH:/usr/local/go/bin" >> ~/.bashrc
    go install github.com/google/gnostic/cmd/protoc-gen-openapi@latest
    curl -fsSL https://get.docker.com | sh
    curl -fsSL https://tailscale.com/install.sh | sh
    echo "clear && cd project-dir" >> ~/.bashrc
    EOF
  - tailscale up --operator=dummyuserlogin --authkey=ts-auth-key --ssh
  - reboot

# - ufw allow 44400:44500/udp
