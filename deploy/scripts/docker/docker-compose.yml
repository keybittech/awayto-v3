services:

  db: # 5432 postgres
    image: ${DB_IMAGE} 
    networks:
      - host
    build:
      context: ../../../
      dockerfile: ./deploy/scripts/docker/db_Dockerfile
    ports:
      - ${PG_PORT}:${PG_PORT}
    environment:
      - POSTGRES_DB=${PG_DB}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASS}
    volumes: 
      - pg_data:/var/lib/postgresql/data

  redis: # 6379
    image: ${REDIS_IMAGE}
    networks:
      - host
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD=${REDIS_PASS}
    command: redis-server --requirepass ${REDIS_PASS}
    volumes:
      - redis_data:/data

  auth: # 8443 keycloak
    image: ${AUTH_IMAGE} 
    networks: 
      - host
    ports:
      - 8080:8080
      - 8443:8443
    build:
      context: ../../../
      dockerfile: ./deploy/scripts/docker/auth_Dockerfile
    volumes:
      - ${UNIX_SOCK_DIR}:/unix_sock
    environment:
      - KC_UNIX_SOCK_DIR=/unix_sock
      - KC_UNIX_SOCK_FILE=${UNIX_SOCK_FILE}
      - KC_API_CLIENT_ID=${KC_CLIENT}
      - KC_PROXY=edge #NONSECRET
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_ADMIN_URL=${KC_PATH} #NONSECRET
      - KC_HOSTNAME_URL=${KC_PATH} #NONSECRET
      - KC_HOSTNAME=${KC_PATH} #NONSECRET
      - KC_HTTP_RELATIVE_PATH=/auth/
      - KEYCLOAK_ADMIN=${KC_ADMIN} #SECRET
      - KEYCLOAK_ADMIN_PASSWORD=${KC_PASS} #SECRET
      - KC_DB_URL=jdbc:postgresql://db:${PG_PORT}/${PG_DB} #NONSECRET
      - KC_DB_USERNAME=${PG_USER} #SECRET
      - KC_DB_PASSWORD=${PG_PASS} #SECRET
      - KC_REDIS_HOST=redis
      - KC_REDIS_PORT=${REDIS_PORT}
      - KC_REDIS_PASS=${REDIS_PASS}
      - KC_REGISTRATION_RATE_LIMIT=100
    depends_on:
      - db

  turn:
    image: ${TURN_IMAGE} 
    networks:
      - host
    build:
      context: ./
      dockerfile: ./turn_Dockerfile
    restart: always
    volumes:
      - ./deploy/scripts/turn/turnserver.confg:/etc/coturn/turnserver.conf:ro

  docs:
    image: gotenberg/gotenberg:8
    ports:
      - 8000:8000
    command:
      - "gotenberg"
      - "--api-port=8000"


networks:
  host:

volumes:
  pg_data:
    name: ${PG_DATA}
    external: true
  redis_data:
    name: ${REDIS_DATA}
    external: true
