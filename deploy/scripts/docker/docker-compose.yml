services:

  db: # 5432 postgres
    image: ${DB_IMAGE} 
    networks:
      - host
    user: "postgres:1000" # secrets are mounted in g 1000
    build:
      context: ../../../
      dockerfile: ./deploy/scripts/docker/db_Dockerfile
    ports:
      - ${PG_PORT}:${PG_PORT}
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/pg_pass
      - PG_DB=${PG_DB}
      - PG_WORKER=${PG_WORKER}
      - PG_WORKER_PASS_FILE=/run/secrets/pg_worker_pass
    secrets:
      - pg_pass
      - pg_worker_pass
    volumes: 
      - ${UNIX_SOCK_DIR}:/var/run/postgresql
      - pg_data:/var/lib/postgresql/data

  redis: # 6379
    image: ${REDIS_IMAGE}
    networks:
      - host
    ports:
      - 6379:6379
    environment:
      - REDIS_PASSWORD_FILE=/run/secrets/redis_pass
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$$(cat /run/secrets/redis_pass)"
    secrets:
      - redis_pass
    volumes:
      - redis_data:/data

  auth: # 8443 keycloak
    image: ${AUTH_IMAGE} 
    depends_on:
      - db
    networks: 
      - host
    ports:
      - 8080:8080
      - 8443:8443
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1'
    #       memory: 512M
    #     reservations:
    #       cpus: '0.5'
    #       memory: 256M
    build:
      context: ../../../
      dockerfile: ./deploy/scripts/docker/auth_Dockerfile
    environment:
      - KC_UNIX_SOCK_DIR=/unix_sock
      - KC_UNIX_SOCK_LOC=${UNIX_SOCK_FILE}
      - KC_API_CLIENT_ID=${KC_CLIENT}
      - KC_PROXY_HEADERS=xforwarded
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_BACKCHANNEL_DYNAMIC=false
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KC_ADMIN}
      - KC_BOOTSTRAP_ADMIN_PASSWORD_FILE=/run/secrets/kc_pass
      # - KC_DB_URL=jdbc:postgresql://db:${PG_PORT}/keycloak
      - KC_DB_URL=jdbc:postgresql:///keycloak?socketFactory=org.newsclub.net.unix.AFUNIXSocketFactory$$FactoryArg&socketFactoryArg=/unix_sock/.s.PGSQL.5432
      - KC_DB_USERNAME=${PG_WORKER}
      - KC_DB_PASSWORD_FILE=/run/secrets/pg_worker_pass
    secrets:
      - kc_pass
      - pg_worker_pass
    volumes:
      - ${UNIX_SOCK_DIR}:/unix_sock

  turn:
    image: ${TURN_IMAGE} 
    networks:
      - host
    build:
      context: ./
      dockerfile: ./turn_Dockerfile
    restart: always
    volumes:
      - ./deploy/scripts/turn/turnserver.confg:/etc/coturn/turnserver.conf:ro

  docs:
    image: gotenberg/gotenberg:8
    ports:
      - 8000:8000
    command:
      - "gotenberg"
      - "--api-port=8000"

secrets:
  kc_pass:
    file: ../../../secrets/kc_pass
  pg_pass:
    file: ../../../secrets/pg_pass
  pg_worker_pass:
    file: ../../../secrets/pg_worker_pass
  redis_pass:
    file: ../../../secrets/redis_pass

networks:
  host:

volumes:
  pg_data:
    name: ${PG_DATA}
    external: true
  redis_data:
    name: ${REDIS_DATA}
    external: true
